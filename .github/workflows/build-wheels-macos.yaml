name: build-wheels-macos

on:
  push:
    branches:
      - wheel
    tags:
      - '*'

  workflow_dispatch:

env:
  KHG_IS_FOR_PYPI: 1

concurrency:
  group: build-wheels-macos-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        python-version: ["cp38", "cp39", "cp310", "cp311", "cp312", "cp313", "cp314"]

    steps:
      - uses: actions/checkout@v4

      # see https://cibuildwheel.readthedocs.io/en/stable/changelog/
      # for a list of versions
      - name: Build wheels
        uses: pypa/cibuildwheel@v3.1.4
        env:
          CIBW_BUILD: "${{ matrix.python-version}}-* "
          CIBW_ENVIRONMENT: >
            MACOSX_DEPLOYMENT_TARGET=10.15
            KHG_CMAKE_ARGS="-DCMAKE_OSX_ARCHITECTURES='arm64;x86_64' -DCMAKE_OSX_DEPLOYMENT_TARGET='10.15'"
          CIBW_ARCHS: "universal2"
          CIBW_BUILD_VERBOSITY: 3

          #  Don't repair macOS wheels
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: ""

      - name: Display wheels
        shell: bash
        run: |
          ls -lh ./wheelhouse/
          unzip -l ./wheelhouse/*.whl

      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.python-version }}
          path: ./wheelhouse/*.whl

      - name: Publish wheels to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python3 -m pip install --break-system-packages --upgrade pip
          python3 -m pip install --break-system-packages wheel twine==5.0.0 setuptools

          twine upload ./wheelhouse/*.whl
