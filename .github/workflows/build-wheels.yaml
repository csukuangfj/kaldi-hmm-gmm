name: build-wheels

on:
  push:
    branches:
      - wheel
    tags:
      - '*'

env:
  KHG_IS_FOR_PYPI: 1

concurrency:
  group: build-wheels-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: [ubuntu-latest, windows-latest]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2

      # see https://cibuildwheel.readthedocs.io/en/stable/changelog/
      # for a list of versions
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.4
        env:
          CIBW_BEFORE_BUILD: "pip install -U cmake numpy"
          CIBW_BUILD: "cp38-*"
          # CIBW_SKIP: "cp27-* cp35-* cp36-* pp*"
          CIBW_BUILD_VERBOSITY: 3
          CIBW_ENVIRONMENT_LINUX: LD_LIBRARY_PATH='/project/build/bdist.linux-x86_64/wheel/kaldi_hmm_gmm/lib'

      - name: Display wheels
        shell: bash
        run: |
          ls -lh ./wheelhouse/

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

      # - name: Publish wheels to PyPI
      #   env:
      #     TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
      #     TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      #   run: |
      #     python3 -m pip install --upgrade pip
      #     python3 -m pip install wheel twine setuptools
      #
      #     twine upload ./wheelhouse/*.whl
      #
      # - name: Build sdist
      #   if: ${{ matrix.os == 'ubuntu-latest' }}
      #   shell: bash
      #   run: |
      #     python3 setup.py sdist
      #     ls -l dist/*
      #
      # - name: Publish sdist to PyPI
      #   if: ${{ matrix.os == 'ubuntu-latest' }}
      #   env:
      #     TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
      #     TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      #   run: |
      #     twine upload dist/kaldi_hmm_gmm-*.tar.gz
